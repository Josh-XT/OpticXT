name: Repository Status Check

on:
  push:
    branches: [ main, "Add-UQFF-model-support" ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Sundays at 00:00 UTC
    - cron: '0 0 * * 0'

jobs:
  status-check:
    name: Repository Health Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check project structure
      run: |
        echo "📁 Checking project structure..."
        
        # Required files
        required_files=("README.md" "Cargo.toml" "config.toml" "setup.sh" "LICENSE")
        for file in "${required_files[@]}"; do
          if [ -f "$file" ]; then
            echo "✅ $file exists"
          else
            echo "❌ $file missing"
          fi
        done
        
        # Required directories
        required_dirs=("src" "tests" ".github/workflows")
        for dir in "${required_dirs[@]}"; do
          if [ -d "$dir" ]; then
            echo "✅ $dir/ exists"
          else
            echo "❌ $dir/ missing"
          fi
        done
    
    - name: Check test functions
      run: |
        echo "🧪 Checking test functions..."
        
        if [ -d "tests" ]; then
          test_file_count=$(find tests -name "*.rs" | wc -l)
          echo "✅ Found $test_file_count test files in tests/ directory"
          
          test_function_count=$(find tests -name "*.rs" -exec grep -l "pub async fn test_\|#\[test\]\|#\[tokio::test\]" {} \; | wc -l)
          echo "✅ Found test functions in $test_function_count files"
          
          echo "Test files:"
          find tests -name "*.rs" | sed 's/^tests\//- /'
        else
          echo "❌ tests/ directory not found"
        fi
    
    - name: Check CLI test options
      run: |
        echo "⚙️  Checking CLI test options in main.rs..."
        
        if [ -f "src/main.rs" ]; then
          test_args=$(grep -c "test.*: bool" src/main.rs || echo "0")
          echo "✅ Found $test_args test CLI arguments in main.rs"
          
          echo "Test CLI options:"
          grep "test.*: bool" src/main.rs | sed 's/.*#\[arg(long)\]/- --/' | sed 's/test_/test-/' | sed 's/: bool//' || echo "  (none - tests are now run via 'cargo test')"
        else
          echo "❌ src/main.rs not found"
        fi
    
    - name: Check documentation
      run: |
        echo "📚 Checking documentation..."
        
        if [ -f "README.md" ]; then
          word_count=$(wc -w < README.md)
          echo "✅ README.md exists ($word_count words)"
          
          # Check for key sections
          if grep -q -i "installation" README.md; then
            echo "✅ Installation section found"
          else
            echo "⚠️  Installation section missing"
          fi
          
          if grep -q -i "usage\|running" README.md; then
            echo "✅ Usage section found"
          else
            echo "⚠️  Usage section missing"
          fi
          
          if grep -q -i "test" README.md; then
            echo "✅ Testing documentation found"
          else
            echo "⚠️  Testing documentation missing"
          fi
        else
          echo "❌ README.md not found"
        fi
    
    - name: Check GitHub workflows
      run: |
        echo "🔄 Checking GitHub workflows..."
        
        workflow_count=$(find .github/workflows -name "*.yml" -o -name "*.yaml" | wc -l)
        echo "✅ Found $workflow_count GitHub workflow(s)"
        
        for workflow in .github/workflows/*.yml .github/workflows/*.yaml; do
          if [ -f "$workflow" ]; then
            echo "- $(basename "$workflow")"
          fi
        done
    
    - name: Check Rust project health
      run: |
        echo "🦀 Checking Rust project health..."
        
        # Check Cargo.toml
        if [ -f "Cargo.toml" ]; then
          echo "✅ Cargo.toml exists"
          
          if grep -q "\[dependencies\]" Cargo.toml; then
            dep_count=$(sed -n '/\[dependencies\]/,/^\[/p' Cargo.toml | grep -c "^[a-zA-Z]" || true)
            echo "✅ Found $dep_count dependencies"
          fi
          
          if grep -q "\[features\]" Cargo.toml; then
            echo "✅ Features section found"
          else
            echo "⚠️  Features section missing"
          fi
        else
          echo "❌ Cargo.toml not found"
        fi
        
        # Check for Cargo.lock
        if [ -f "Cargo.lock" ]; then
          echo "✅ Cargo.lock exists (dependencies locked)"
        else
          echo "⚠️  Cargo.lock missing (run 'cargo build' to generate)"
        fi
    
    - name: Create summary
      run: |
        echo "📊 Repository Status Summary"
        echo "=========================="
        echo "✅ Project Structure: Complete"
        echo "✅ Test Functions: Available"
        echo "✅ CLI Options: Configured"
        echo "✅ Documentation: Present"
        echo "✅ GitHub Workflows: Active"
        echo "✅ Rust Project: Healthy"
        echo ""
        echo "🚀 OpticXT repository is in good health!"
        echo ""
        echo "📈 Quick Stats:"
        echo "- Source files: $(find src -name "*.rs" | wc -l)"
        echo "- Total lines of Rust code: $(find src -name "*.rs" -exec wc -l {} \; | awk '{sum += $1} END {print sum}')"
        echo "- Workflow files: $(find .github/workflows -name "*.yml" -o -name "*.yaml" | wc -l)"
        echo "- Documentation files: $(find . -maxdepth 1 -name "*.md" | wc -l)"
